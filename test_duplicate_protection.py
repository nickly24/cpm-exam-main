#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç-—Å–µ—Å—Å–∏–π
"""

import requests
import json
import time

# URL API
API_URL = "http://localhost:81"

def test_duplicate_protection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞—â–∏—Ç—É –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç-—Å–µ—Å—Å–∏–π"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_data = {
        "studentId": "test_student_123",
        "testId": "test_id_456", 
        "testTitle": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ—Å—Ç",
        "answers": [
            {
                "questionId": 1,
                "type": "single",
                "selectedAnswer": "a",
                "points": 1,
                "isCorrect": True
            }
        ],
        "score": 1,
        "timeSpentMinutes": 5
    }
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—Ç—ã –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç-—Å–µ—Å—Å–∏–π")
    print("=" * 60)
    
    # –ü–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
    print("1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—É—é –ø–æ–ø—ã—Ç–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç-—Å–µ—Å—Å–∏–∏...")
    response1 = requests.post(f"{API_URL}/create-test-session", json=test_data)
    
    print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥: {response1.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response1.json(), indent=2, ensure_ascii=False)}")
    
    if response1.status_code == 200:
        print("‚úÖ –ü–µ—Ä–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–µ—Ä–≤–æ–π —Å–µ—Å—Å–∏–∏")
        return
    
    print("\n" + "-" * 40 + "\n")
    
    # –í—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞)
    print("2Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä—É—é –ø–æ–ø—ã—Ç–∫—É —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç-—Å–µ—Å—Å–∏–∏ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞)...")
    response2 = requests.post(f"{API_URL}/create-test-session", json=test_data)
    
    print(f"–°—Ç–∞—Ç—É—Å –∫–æ–¥: {response2.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {json.dumps(response2.json(), indent=2, ensure_ascii=False)}")
    
    if response2.status_code == 409:
        print("‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!")
        print("üéØ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω - –∑–∞—â–∏—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –û–®–ò–ë–ö–ê: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!")
        print("üö® –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    print("\n" + "=" * 60)
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    try:
        test_duplicate_protection()
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:81")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–∞: {e}")
